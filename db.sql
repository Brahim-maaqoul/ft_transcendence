CREATE TABLE "users" (
  "user_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "oauth_id" VARCHAR(255) NOT NULL,
  "avatar_url" VARCHAR(255),
  "two_factor_enabled" BOOLEAN DEFAULT FALSE,
  "first_signIn" BOOLEAN DEFAULT TRUE,
  "token" VARCHAR(255) NOT NULL
);

CREATE TABLE "names" (
  "names_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT NOT NULL,
  "unique_name" VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE "status" (
  "status_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT NOT NULL,
  "status" INT DEFAULT 0
);

CREATE TABLE "stats" (
  "stats_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT NOT NULL,
  "wins" INT DEFAULT 0,
  "losses" INT DEFAULT 0,
  "goal_conceded" INT DEFAULT 0,
  "goal_scoared" INT DEFAULT 0,
  "clean_sheets" INT DEFAULT 0
);

CREATE TABLE "chat_channels" (
  "channel_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "channel_name" VARCHAR(255) NOT NULL,
  "channel_type" VARCHAR(255) NOT NULL,
  "password" VARCHAR(255) DEFAULT null
);

CREATE TABLE "members" (
  "member_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT NOT NULL,
  "channel_id" INT NOT NULL,
  "is_admin" BOOLEAN
);

CREATE TABLE "chat_messages" (
  "message_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "channel_id" INT NOT NULL,
  "sender_id" INT NOT NULL,
  "message_text" TEXT NOT NULL,
  "send_time" TIMESTAMP DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "matchmaking_queue" (
  "queue_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT NOT NULL
);

CREATE TABLE "pong_games" (
  "game_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "game_date" TIMESTAMP,
  "player1_id" INT NOT NULL,
  "player2_id" INT NOT NULL,
  "game_type" VARCHAR(255),
  "player1_goal" INT DEFAULT 0,
  "player2_goal" INT DEFAULT 0,
  "game_over" BOOLEAN DEFAULT FALSE
);

CREATE TABLE "achievements" (
  "achievement_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" INT NOT NULL,
  "achievement_name" VARCHAR(255) NOT NULL,
  "achievement_description" TEXT,
  "achievement_date" TIMESTAMP DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "friends" (
  "friendship_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user1_id" INT NOT NULL,
  "user2_id" INT NOT NULL,
  "status" VARCHAR(255) NOT NULL,
  "request_date" TIMESTAMP DEFAULT (CURRENT_TIMESTAMP),
  "accept_date" TIMESTAMP DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "invatation" (
  "invatation_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "sender_id" INT NOT NULL,
  "resever_id" INT NOT NULL,
  "time" TIMESTAMP DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "blocked_user" (
  "blocked_id" INT NOT NULL,
  "blocker_id" INT NOT NULL
);

ALTER TABLE "chat_messages" ADD FOREIGN KEY ("channel_id") REFERENCES "chat_channels" ("channel_id");

ALTER TABLE "chat_messages" ADD FOREIGN KEY ("sender_id") REFERENCES "users" ("user_id");

ALTER TABLE "matchmaking_queue" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "pong_games" ADD FOREIGN KEY ("player1_id") REFERENCES "users" ("user_id");

ALTER TABLE "pong_games" ADD FOREIGN KEY ("player2_id") REFERENCES "users" ("user_id");

ALTER TABLE "achievements" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "friends" ADD FOREIGN KEY ("user1_id") REFERENCES "users" ("user_id");

ALTER TABLE "friends" ADD FOREIGN KEY ("user2_id") REFERENCES "users" ("user_id");

ALTER TABLE "stats" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "members" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "members" ADD FOREIGN KEY ("channel_id") REFERENCES "chat_channels" ("channel_id");

ALTER TABLE "names" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "status" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "invatation" ADD FOREIGN KEY ("sender_id") REFERENCES "users" ("user_id");

ALTER TABLE "invatation" ADD FOREIGN KEY ("resever_id") REFERENCES "users" ("user_id");

ALTER TABLE "blocked_user" ADD FOREIGN KEY ("blocked_id") REFERENCES "users" ("user_id");

ALTER TABLE "blocked_user" ADD FOREIGN KEY ("blocker_id") REFERENCES "users" ("user_id");
